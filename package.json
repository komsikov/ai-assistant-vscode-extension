{
  "name": "vscode-ai-assistant",
  "displayName": "vscode-ai-assistant",
  "description": "Extension uses AiAssistant Api to make chat compilations and image generations.",
  "version": "1.0.0",
  "publisher": "komsikov",
  "bugs": {
    "url": "https://github.com/komsikov/ai-assistant-vscode-extension/issues",
    "email": "deniskomsikov@gmail.com"
  },
  "homepage": "https://github.com/komsikov/ai-assistant-vscode-extension/main/README.md",
  "repository": {
    "url": "https://github.com/komsikov/ai-assistant-vscode-extension",
    "type": "git"
  },
  "keywords": [
    "gpt",
    "nlp",
    "ai"
  ],
  "icon": "out/media/ai-assistant-logo.png",
  "galleryBanner": {
    "color": "#0000FF",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:extension.start"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ai-assistant-view",
          "title": "AI Assistant",
          "icon": "./out/media/activity-bar-logo.svg"
        }
      ]
    },
    "views": {
      "ai-assistant-view": [
        {
          "type": "webview",
          "id": "ai-assistant-view-id",
          "name": "Panel"
        }
      ]
    },
    "commands": [
      {
        "command": "vscode-ai-assistant.start",
        "title": "Ask to AiAssistant"
      },
      {
        "command": "vscode-ai-assistant.start-image",
        "title": "Start Image"
      },
      {
        "command": "vscode-ai-assistant.refactor",
        "title": "AiAssistant Refactor"
      },
      {
        "command": "vscode-ai-assistant.addComments",
        "title": "AiAssistant Add Comments"
      },
      {
        "command": "vscode-ai-assistant.addDocumentation",
        "title": "AiAssistant Add Documentation"
      }
    ],
    "keybindings": [
      {
        "command": "vscode-ai-assistant.addDocumentation",
        "key": "ctrl+alt+d",
        "mac": "shift+cmd+d"
      },
      {
        "command": "vscode-ai-assistant.addComments",
        "key": "ctrl+alt+c",
        "mac": "shift+cmd+c"
      },
      {
        "command": "vscode-ai-assistant.refactor",
        "key": "ctrl+alt+r",
        "mac": "shift+cmd+r"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-ai-assistant.start",
          "when": "false"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-ai-assistant.refactor",
          "group": "AiAssistant",
          "when": "editorLangId == typescript || editorLangId == javascript || editorLangId == csharp || editorLangId == java"
        },
        {
          "command": "vscode-ai-assistant.addComments",
          "group": "AiAssistant"
        },
        {
          "command": "vscode-ai-assistant.addDocumentation",
          "group": "AiAssistant",
          "when": "editorLangId == typescript || editorLangId == javascript || editorLangId == csharp || editorLangId == java"
        }
      ]
    },
    "webviews": [
      {
        "viewType": "markdown.preview",
        "icon": {
          "light": "./out/media/ai-assistant-logo.png",
          "dark": "./out/media/ai-assistant-logo.png"
        }
      }
    ],
    "configuration":[
      {
        "title": "AI Assistant",
        "properties": {
          "aiAssistant.apiUrl": {
            "type": "string",
            "default": "https://api.openai.com/v1/chat/completions",
            "format": "uri",
            "description": "API uri of models."
          },
          "aiAssistant.apiKey": {
            "type": "string",
            "default": "",
            "description": "API key of models."
          },
          "aiAssistant.apiSchema": {
            "type": "string",
            "default": "{ \"id\": \"string\", // A unique identifier for the chat completion chunk.\n\"object\": \"string\", // The object type, which is always chat.completion.chunk.\n\"created\": \"integer\", // The Unix timestamp (in seconds) of when the chat completion chunk was created.\n\"model\": \"string\", // The model to generate the completion.\n\"choices\": \"array\", // A list of chat completion choices. Can be more than one if n is greater than 1.\n\"index\": \"integer\", // The index of the choice in the list of choices.\n\"delta\": \"object\", // A chat completion delta generated by streamed model responses.\n\"finish_reason\": \"string\", // string or null The reason the model stopped generating tokens. This will be stop if the model hit a natural stop point or a provided stop sequence, length if the maximum number of tokens specified in the request was reached, or function_call if the model called a function.}",
            "editPresentation": "multilineText",
            "description": "API schema of models."
          },
          "aiAssistant.editor.apiKey": {
            "type": "string",
            "default": "",
            "description": "Separate API key for the editor model."
          },
          "aiAssistant.editor.apiUrl": {
            "type": "string",
            "default": "",
            "description": "Separate API URL for the editor model."
          },
          "aiAssistant.editor.temperature": {
            "type": "number",
            "default": 0.8,
            "minimum": 0,
            "maximum": 2,
            "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic."
          },
          "aiAssistant.chat.apiKey": {
            "type": "string",
            "default": "",
            "description": "Separate API key for the chat model."
          },
          "aiAssistant.image.apiKey": {
            "type": "string",
            "default": "",
            "description": "Separate API key for the image model."
          },
          "aiAssistant.image.responseNumber": {
            "type": "number",
            "default": 1,
            "description": "Smaller sizes are faster to generate. You can request 1-5 images at a time using the n parameter.",
            "markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) in gutter blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats"
          },
          "aiAssistant.image.size": {
            "type": "string",
            "default": "512x512",
            "description": "Generated images can have a size of 256x256, 512x512, or 1024x1024 pixels."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "NODE_ENV=production node ./esbuild.js",
    "compile:dev": "node ./esbuild.js",
    "watch": "node ./esbuild.js --watch",
    "package": "vsce pack --out ./out",
    "pretest": "npm run compile:dev && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.77.0",
    "@types/vscode-webview": "^1.57.1",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "@vscode/test-electron": "^2.3.0",
    "@vscode/vsce": "^2.21.0",
    "esbuild": "^0.16.17",
    "esbuild-copy-static-files": "^0.1.0",
    "eslint": "^8.36.0",
    "glob": "^10.3.4",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@vscode/webview-ui-toolkit": "^1.2.2",
    "rxjs": "^7.8.0",
    "undici": "^5.21.0"
  }
}
